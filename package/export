#!/bin/sh -e
# See http://skarnet.org./software/compile.html
if [ \! -d package ] || [ \! -d source ] 
then
	echo "You are not in the right directory." 1>&2 
	exit 100
fi
if [ \! -d command ] || [ \! -d guide ] || [ \! -d manual ] || [ \! -d config ]
then
	echo "You have not installed the built items." 1>&2
	exit 100
fi

root1="${1-/usr/local/}"
root2="${2-/}"
root3="${3-/var/}"
user="`id -un`"
group="`id -gn`"

mkdir -m 0755 -p "${root1}" "${root2}" "${root3}"
absroot1="`readlink -f "${root1}"`/"
absroot2="`readlink -f "${root2}"`/"
absroot3="`readlink -f "${root3}"`/"

mkdir -m 0755 -p "${root1}"bin "${root1}"sbin "${root1}"etc "${root1}"etc/rc.d "${root1}"man "${root1}"man/man1 "${root1}"man/man8 "${root1}"lib "${root1}"lib/systemd/system "${root1}"lib/tmpfiles.d "${root1}"lib/systemd/system-preset "${root1}"share "${root1}"share/doc/nosh
mkdir -m 0755 -p "${root2}"bin "${root2}"sbin "${root2}"etc "${root2}"etc/service-bundles/services "${root2}"etc/service-bundles/targets "${root2}"etc/system-control/presets "${root2}"etc/system-control/convert "${root2}"run
mkdir -m 0755 -p "${root3}"sv "${root3}"local/sv

(
	awk '{ if ($1 != "exec" && $1 != "session-manager" && $1 != "console-terminal-emulator" && $1 != "service-control" && $1 != "system-control") print $0 ; }' package/aliases1 
) | while read command alias
do
	# Manual page symbolic links
	ln -f -s -- "${command}.1" "${root1}"man/man1/"${alias}.1"{new}
	mv -f -- "${root1}"man/man1/"${alias}.1"{new} "${root1}"man/man1/"${alias}.1"
done
(
	cat package/commands1 package/extra-manpages1
	awk '{ if ($1 == "exec" || $1 == "session-manager" || $1 == "console-terminal-emulator" || $1 == "service-control" || $1 == "system-control") print $2 ; }' package/aliases1
	awk '{ if ($1 == "service-control" && $2 != "svc") print $2 ; }' package/aliases1
) | while read i
do
	# Manual page
	rm -f -- "${root1}"man/man1/"$i.1"{new}
	install -m 0644 -o "${user}" -g "${group}" -p -- manual/"$i.1" "${root1}"man/man1/"$i.1"{new}
	mv -f -- "${root1}"man/man1/"$i.1"{new} "${root1}"man/man1/"$i.1"
done
(
	awk '{ if ($1 != "session-manager") print $0 ; }' package/aliases8
) | while read command alias
do
	# Manual page symbolic links
	ln -f -s -- "${command}.8" "${root1}"man/man8/"${alias}.8"{new}
	mv -f -- "${root1}"man/man8/"${alias}.8"{new} "${root1}"man/man8/"${alias}.8"
done
(
	cat package/commands8 package/extra-manpages8
) | while read i
do
	# Manual page
	rm -f -- "${root1}"man/man8/"$i.8"{new}
	install -m 0644 -o "${user}" -g "${group}" -p -- manual/"$i.8" "${root1}"man/man8/"$i.8"{new}
	mv -f -- "${root1}"man/man8/"$i.8"{new} "${root1}"man/man8/"$i.8"
done
(
	awk '{ if ($1 != "exec" && $1 != "session-manager" && $1 != "console-terminal-emulator" && $1 != "service-control" && $1 != "system-control") print $0 ; }' package/aliases1 
	awk '{ if ($1 != "session-manager") print $0 ; }' package/aliases8
) | while read command alias
do
	# Documentation symbolic links
	ln -f -s -- "${command}.html" "${root1}"share/doc/nosh/"${alias}.html"{new}
	mv -f -- "${root1}"share/doc/nosh/"${alias}.html"{new} "${root1}"share/doc/nosh/"${alias}.html"
done
(
	cat package/guidepages package/commands1 package/commands8 package/extra-manpages1 package/extra-manpages8
	awk '{ if ($1 == "exec" || $1 == "session-manager" || $1 == "console-terminal-emulator" || $1 == "service-control" || $1 == "system-control") print $2 ; }' package/aliases1
	awk '{ if ($1 == "service-control" && $2 != "svc") print $2 ; }' package/aliases1
) | while read i
do
	# Documentation
	rm -f -- "${root1}"share/doc/nosh/"$i.html"{new}
	install -m 0644 -o "${user}" -g "${group}" -p -- guide/"$i.html" "${root1}"share/doc/nosh/"$i.html"{new}
	mv -f -- "${root1}"share/doc/nosh/"$i.html"{new} "${root1}"share/doc/nosh/"$i.html"
done
while read i
do
	# Executable
	rm -f -- "${root1}"bin/"$i"{new}
	install -m 0755 -o "${user}" -g "${group}" -p -- command/"$i" "${root1}"bin/"$i"{new}
	mv -f -- "${root1}"bin/"$i"{new} "${root1}"bin/"$i"
done < package/commands1
while read i
do
	# Executable
	rm -f -- "${root1}"sbin/"$i"{new}
	install -m 0755 -o "${user}" -g "${group}" -p -- command/"$i" "${root1}"sbin/"$i"{new}
	mv -f -- "${root1}"sbin/"$i"{new} "${root1}"sbin/"$i"
done < package/commands8
while read command alias
do
	# Hard link alias
	ln -f -- "${root1}"bin/"${command}" "${root1}"bin/"${alias}"{new}
	mv -f -- "${root1}"bin/"${alias}"{new} "${root1}"bin/"${alias}"
done < package/aliases1
while read command alias
do
	# Hard link alias
	ln -f -- "${root1}"sbin/"${command}" "${root1}"sbin/"${alias}"{new}
	mv -f -- "${root1}"sbin/"${alias}"{new} "${root1}"sbin/"${alias}"
done < package/aliases8
for j in nosh exec system-control
do
	# Unmerged /usr binaries to /bin
	rm -f -- "${root2}"bin/"$j"{new}
	ln -f -- "${root1}"bin/"$j" "${root2}"bin/"$j"{new} 2>/dev/null ||
	install -m 0755 -o "${user}" -g "${group}" -p -- "${root1}"bin/"$j" "${root2}"bin/"$j"{new}
	mv -f -- "${root2}"bin/"$j"{new} "${root2}"bin/"$j"
done
for j in system-manager
do
	# Unmerged /usr binaries to /sbin
	rm -f -- "${root2}"sbin/"$j"{new}
	ln -f -- "${root1}"sbin/"$j" "${root2}"sbin/"$j"{new} 2>/dev/null ||
	install -m 0755 -o "${user}" -g "${group}" -p -- "${root1}"sbin/"$j" "${root2}"sbin/"$j"{new}
	mv -f -- "${root2}"sbin/"$j"{new} "${root2}"sbin/"$j"
done
while read i
do
	# systemd service units
	cp -p -f -l -- config/systemd/"$i" "${root1}"lib/systemd/system/"$i"{new}
	mv -f -- "${root1}"lib/systemd/system/"$i"{new} "${root1}"lib/systemd/system/"$i"
done < package/systemd-services
while read i
do
	# systemd temp files
	cp -p -f -- config/systemd/"$i" "${root1}"lib/tmpfiles.d/"$i"{new}
	mv -f -- "${root1}"lib/tmpfiles.d/"$i"{new} "${root1}"lib/tmpfiles.d/"$i"
done < package/tmpfiles-snippets
while read i
do
	# NetBSD rc script files
	cp -p -f -- config/rc.d/"$i" "${root1}"etc/rc.d/"$i"{new}
	mv -f -- "${root1}"etc/rc.d/"$i"{new} "${root1}"etc/rc.d/"$i"
done < package/netbsd-rc-scripts
for i in issue.vc
do
	# vt config files
	cp -p -f -- config/vt/"$i" "${root1}"etc/"$i"{new}
	mv -f -- "${root1}"etc/"$i"{new} "${root1}"etc/"$i"
done
while read i
do
	# systemd presets
	cp -p -f -- config/presets/"$i" "${root1}"lib/systemd/system-preset/"$i"{new}
	mv -f -- "${root1}"lib/systemd/system-preset/"$i"{new} "${root1}"lib/systemd/system-preset/"$i"
done < package/systemd-presets
(
	for i in bundles run-via-systemd run-via-netbsd-rc run-virtualbox-guest run-freedesktop-system-bus run-freedesktop-kits run-openssh-server run-user-vt run-kernel-vt run-appletalk run-udev run-busybox-mdev run-suckless-mdev run-vdev run-local-syslog run-klog
	do
		cat package/common-nosh-$i-presets 
		case "`uname`" in
		Linux) cat package/linux-nosh-$i-presets ;;
		*BSD) cat package/bsd-nosh-$i-presets ;;
		esac
	done
) | while read i
do
	# override systemd presets when importing to nosh
	cp -p -f -- config/presets/"$i" "${root2}"etc/system-control/presets/"$i"{new}
	mv -f -- "${root2}"etc/system-control/presets/"$i"{new} "${root2}"etc/system-control/presets/"$i"
done
while read i
do
	# conversion scripts for external formats, and service templates that they use
	cp -p -f -- config/convert/"$i" "${root2}"etc/system-control/convert/"$i"{new}
	mv -f -- "${root2}"etc/system-control/convert/"$i"{new} "${root2}"etc/system-control/convert/"$i"
done < package/conversion-tools
while read i
do
	# standard target bundles
	rm -f -- "${root2}"etc/service-bundles/targets/"$i"/service/remain
	(cd config/targets/ && pax -r -w -l -- "$i" "${absroot2}"etc/service-bundles/targets/)
done < package/standard-targets
(
	cat package/common-etc-services 
	case "`uname`" in
	Linux) cat package/linux-etc-services ;;
	*BSD) cat package/bsd-etc-services ;;
	esac
) | while read i
do
	# etc service bundles
	rm -f -- "${root2}"etc/service-bundles/services/"$i"/service/remain
	(cd config/services/ && pax -r -w -l -- "$i" "${absroot2}"etc/service-bundles/services/)
done
while read i
do
	# mount service bundles
	rm -f -- "${root2}"etc/service-bundles/services/mount@"$i"/service/remain
	rm -f -- "${root2}"etc/service-bundles/services/fsck@"$i"/service/remain
	(cd config/services/ && pax -r -w -l -- mount@"$i" "${absroot2}"etc/service-bundles/services/)
	(cd config/services/ && pax -r -w -l -- fsck@"$i" "${absroot2}"etc/service-bundles/services/)
done < package/common-mounts
(
	cat package/common-services package/common-sockets package/common-ttys
	case "`uname`" in
	Linux) cat package/linux-services package/linux-sockets package/linux-ttys ;;
	*BSD) cat package/bsd-services package/bsd-sockets package/bsd-ttys ;;
	esac
) | while read i
do
	# service bundles
	rm -f -- "${root3}"sv/"$i"/service/remain
	rm -f -- "${root3}"sv/cyclog@"$i"/service/remain
	(cd config/services/ && pax -r -w -l -- "$i" "${absroot3}"sv/)
	(cd config/services/ && pax -r -w -l -- cyclog@"$i" "${absroot3}"sv/)
done
