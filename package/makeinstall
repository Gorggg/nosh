#!/bin/sh -e
# See http://skarnet.org./software/compile.html
if [ \! -d package ] || [ \! -d source ]
then
	echo "You are not in the right directory." 1>&2
	exit 100
fi
if [ \! -d build ]
then
	echo "You have not prepared the build area." 1>&2
	exit 100
fi

# Atomically update the release directories ./command, ./library, ./include, and so forth.
# The build and release directories need not be on the same disc volume.
# And the files released must not be potentially overwritable and truncatable by the compiler/linker during subsequent builds.
# But released files can be links to other released files, of course.
mkdir -p -m 0755 command manual config guide

# ##############################################################################
# Build all of the ...{new} files in ./command and ./manual.
cat package/commands1 package/commands8 | while read i
do
	rm -f -- command/"$i"{new}
	cp -p -f -- build/"$i" command/"$i"{new}
	if objdump -f command/"$i"{new} >/dev/null 2>&1
	then
		strip -p -- command/"$i"{new}
	else
		true
	fi
done
cat package/aliases1 package/aliases8 | while read command alias
do
	rm -f -- command/"${alias}"{new}
	ln -f -- command/"${command}"{new} command/"${alias}"{new}
done
# All of the commands that have their own manual pages
cat package/commands1 package/extra-manpages1 | 
while read i
do
	rm -f -- manual/"$i".1{new}
	cp -p -f -- build/"$i".1 manual/"$i".1{new}
done
# All of the commands that have their own manual pages
cat package/commands8 package/extra-manpages8 | 
while read i
do
	rm -f -- manual/"$i".8{new}
	cp -p -f -- build/"$i".8 manual/"$i".8{new}
done
# Aliased manual pages
cat package/aliases1 | 
while read command alias
do
	grep -q -- "^${alias}\$" package/commands1 package/extra-manpages1 && continue
	ln -f -s -- "${command}".1 manual/"${alias}".1{new}
done
# Aliased manual pages
cat package/aliases8 | 
while read command alias
do
	grep -q -- "^${alias}\$" package/commands8 package/extra-manpages8 && continue
	ln -f -s -- "${command}".8 manual/"${alias}".8{new}
done
# All of the commands that have their own guide pages
cat package/guidepages package/commands1 package/extra-manpages1 package/commands8 package/extra-manpages8 | 
while read i
do
	rm -f -- guide/"$i".html{new}
	cp -p -f -- build/"$i".html guide/"$i".html{new}
done
# Aliased guide pages
cat package/aliases1 | 
while read command alias
do
	grep -q -- "^${alias}\$" package/commands1 package/extra-manpages1 && continue
	ln -f -s -- "${command}".html guide/"${alias}".html{new}
done
# Aliased guide pages
cat package/aliases8 | 
while read command alias
do
	grep -q -- "^${alias}\$" package/commands8 package/extra-manpages8 && continue
	ln -f -s -- "${command}".html guide/"${alias}".html{new}
done

# ##############################################################################
# Rename the ...{new} files in ./command and ./manual.
(
	cat package/commands1 package/commands8 
	awk '{print $2;}' package/aliases1 package/aliases8 
) | while read i
do
	mv -f -- command/"$i"{new} command/"$i"
done
# All of the commands that have their own manual pages
cat package/commands1 package/extra-manpages1 | 
while read i
do
	mv -f -- manual/"$i".1{new} manual/"$i".1
done
# All of the commands that have their own manual pages
cat package/commands8 package/extra-manpages8 | 
while read i
do
	mv -f -- manual/"$i".8{new} manual/"$i".8
done
# Aliased manual pages
cat package/aliases1 | 
while read command alias
do
	grep -q -- "^${alias}\$" package/commands1 package/extra-manpages1 && continue
	mv -f -- manual/"${alias}".1{new} manual/"${alias}".1
done
# Aliased manual pages
cat package/aliases8 | 
while read command alias
do
	grep -q -- "^${alias}\$" package/commands8 package/extra-manpages8 && continue
	mv -f -- manual/"${alias}".8{new} manual/"${alias}".8
done
# All of the commands that have their own guide pages
cat package/guidepages package/commands1 package/extra-manpages1 package/commands8 package/extra-manpages8 | 
while read i
do
	mv -f -- guide/"$i".html{new} guide/"$i".html
done
# Aliased guide pages
cat package/aliases1 | 
while read command alias
do
	grep -q -- "^${alias}\$" package/commands1 package/extra-manpages1 && continue
	mv -f -- guide/"${alias}".html{new} guide/"${alias}".html
done
# Aliased guide pages
cat package/aliases8 | 
while read command alias
do
	grep -q -- "^${alias}\$" package/commands8 package/extra-manpages8 && continue
	mv -f -- guide/"${alias}".html{new} guide/"${alias}".html
done

# ##############################################################################
# Build all of the {new} directories in ./config.
rm -rf -- config/targets{new} config/services{new}
mkdir -p -m 0755 config/targets{new} config/services{new}
while read i
do
	cp -a build/targets/$i config/targets{new}/
done < package/standard-targets
while read i
do
	cp -a build/services/mount@$i config/services{new}/
	cp -a build/services/fsck@$i config/services{new}/
done < package/common-mounts
(
	cat package/common-etc-services 
	case "`uname`" in
	Linux)	cat package/linux-etc-services ;;
	*BSD)	cat package/bsd-etc-services ;;
	esac
) | while read i
do
	cp -a build/services/$i config/services{new}/
done
(
	cat package/common-services package/common-sockets package/common-ttys 
	case "`uname`" in
	Linux)	cat package/linux-services package/linux-sockets package/linux-ttys ;;
	*BSD)	cat package/bsd-services package/bsd-sockets package/bsd-ttys ;;
	esac
) | while read i
do
	cp -a build/services/$i config/services{new}/
	cp -a build/services/cyclog@$i config/services{new}/
done
(
	cat package/common-service-aliases 
	case "`uname`" in
	Linux)	cat package/linux-service-aliases ;;
	*BSD)	cat package/bsd-service-aliases ;;
	esac
) | while read service alias
do
	ln -s "${service}" config/services{new}/"${alias}"
	ln -s cyclog@"${service}" config/services{new}/cyclog@"${alias}"
done
(
	cat package/common-etc-service-aliases 
	case "`uname`" in
	Linux)	cat package/linux-etc-service-aliases ;;
	*BSD)	cat package/bsd-etc-service-aliases ;;
	esac
) | while read service alias
do
	ln -s "${service}" config/services{new}/"${alias}"
done

# ##############################################################################
# Build all of the {new} files in ./config.
mkdir -p -m 0755 config/presets config/systemd config/convert config/rc.d config/vt
cat package/systemd-services package/tmpfiles-snippets |
while read i
do
	rm -f -- config/systemd/"$i"{new}
	cp -p -f -- build/systemd/"$i" config/systemd/"$i"{new}
done
(
	cat package/systemd-presets
	for i in bundles run-via-systemd run-via-netbsd-rc run-virtualbox-guest run-freedesktop-system-bus run-freedesktop-kits run-openssh-server run-user-vt run-kernel-vt run-appletalk run-udev run-busybox-mdev run-suckless-mdev run-vdev run-local-syslog run-klog run-pcbsd-base run-trueos-base
	do
		cat package/common-nosh-"$i"-presets package/linux-nosh-"$i"-presets package/bsd-nosh-"$i"-presets 
	done
) | awk '!x[$0]++' | while read i
do
	rm -f -- config/presets/"$i"{new}
	cp -p -f -- build/presets/"$i" config/presets/"$i"{new}
done
while read i
do
	rm -f -- config/rc.d/"$i"{new}
	cp -p -f -- build/rc.d/"$i" config/rc.d/"$i"{new}
done < package/netbsd-rc-scripts
while read i
do
	rm -f -- config/convert/"$i"{new}
	cp -p -f -- build/convert/"$i" config/convert/"$i"{new}
done < package/conversion-tools
for i in issue.vc
do
	rm -f -- config/vt/"$i"{new}
	cp -p -f -- build/"$i" config/vt/"$i"{new}
done 

# ##############################################################################
# Rename the ...{new} directories and files in ./config.
(
cat package/systemd-services package/tmpfiles-snippets
) | while read i
do
	mv -f -- config/systemd/"$i"{new} config/systemd/"$i"
done 
(
cat package/systemd-presets 
for i in bundles run-via-systemd run-via-netbsd-rc run-virtualbox-guest run-freedesktop-system-bus run-freedesktop-kits run-openssh-server run-user-vt run-kernel-vt run-appletalk run-udev run-busybox-mdev run-suckless-mdev run-vdev run-local-syslog run-klog run-pcbsd-base run-trueos-base
do
	cat package/common-nosh-"$i"-presets package/linux-nosh-"$i"-presets package/bsd-nosh-"$i"-presets 
done
) | awk '!x[$0]++' | while read i
do
	mv -f -- config/presets/"$i"{new} config/presets/"$i"
done 
while read i
do
	mv -f -- config/rc.d/"$i"{new} config/rc.d/"$i"
done < package/netbsd-rc-scripts
while read i
do
	mv -f -- config/convert/"$i"{new} config/convert/"$i"
done < package/conversion-tools
for i in targets services
do
	test -e config/"$i" && mv -f -- config/"$i" config/"$i"{old}
	mv -f -- config/"$i"{new} config/"$i"
	rm -rf -- config/"$i"{old}
done
for i in issue.vc
do
	mv -f -- config/vt/"$i"{new} config/vt/"$i"
done 
