<refentry id="tai64nlocal">

<refmeta><refentrytitle>tai4nlocal</refentrytitle><manvolnum>1</manvolnum><refmiscinfo class="manual">user commands</refmiscinfo><refmiscinfo class="source">nosh</refmiscinfo><refmiscinfo class="version">1.0</refmiscinfo></refmeta>

<refnamediv><refname>tai64nlocal</refname><refpurpose>filter to translate external TAI64N timestamps</refpurpose></refnamediv>

<refsynopsisdiv>
<cmdsynopsis>
<command>tai64nlocal</command> <arg rep='repeat'><replaceable>files</replaceable></arg>
</cmdsynopsis>
</refsynopsisdiv>

<refsection><title>Description</title>

<para>
<command>tai64nlocal</command> reads a series of lines.  
For each line that begins with an <code>@</code> character and a TAI64N timestamp
in external form (16 hexadecimal digits of seconds and 8 hexadecimal
digits of nanoseconds) it replaces the timestamp with a broken down
calendar date and time in human-readable form.
</para>

<para>
If no <replaceable>files</replaceable> are supplied, <command>tai64nlocal</command> reads from its standard
input until EOF.
Otherwise it processes each named file in turn.
In both cases it writes to its standard output.
</para>

<para>
A trailing newline is silently added to any file (or to standard input) that
ends with a partial line.
</para>

</refsection><refsection><title>TAI</title>

<para>
<command>tai64nlocal</command> usually doesn't expect real TAI timestamps.
Rather, it expects UTC-10 timestamps, in 96-bit external TAI64N form.
But this is alright, since the program that generated the timestamps
in the first place won't have encoded TAI either.
</para>

<para>
This is because it will have relied upon the <code>CLOCK_REALTIME</code> clock
of the system's
<citerefentry><refentrytitle>clock_gettime</refentrytitle><manvolnum>2</manvolnum></citerefentry>
library function.
This rarely produces anything but UTC.
Few programs, including the ones in daemontools, go to the bother of
correctly converting UTC to TAI, but rather pretend that UTC-10 is TAI.
</para>

</refsection><refsection><title>COMPATIBILITY</title>

<para>
The daemontools and daemontools-encore <citerefentry><refentrytitle>tai64nlocal</refentrytitle><manvolnum>1</manvolnum></citerefentry> both have a bug that
causes them to crash if the input contains a line beginning with an <code>@</code>
character but not having a properly encoded TAI64N timestamp, or having a
TAI64N timestamp outwith the range acceptable to the <citerefentry><refentrytitle>localtime</refentrytitle><manvolnum>1</manvolnum></citerefentry> library
function.
<command>tai64nlocal</command> does not replicate this bug.
</para>

</refsection><refsection><title>Author</title><para>Jonathan de Boyne Pollard</para></refsection>

</refentry>
